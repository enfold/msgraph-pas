[buildout]
extends =

parts +=
    instance
    omelette
    test
    coverage
    test-coverage
    releaser
    code-analysis

develop = .
unzip = true

extensions = mr.developer
sources-dir = ${buildout:directory}/devsrc
always-checkout = force
auto-checkout = *

[code-analysis]
recipe = plone.recipe.codeanalysis
directory = ${buildout:directory}/src
flake8-ignore = C901,E241
flake8-max-complexity = 20
clean-lines = False
imports = True
debug-statements = True
utf8-header = True

[instance]
recipe = plone.recipe.zope2instance
user = admin:admin
http-address = 8080
debug-mode = on
verbose-security = off
deprecation-warnings = on
blob-storage = var/blobstorage

eggs =
    pas.plugins.azure_ad
    ipdb

zcml =
    pas.plugins.azure_ad

[releaser]
recipe = zc.recipe.egg
eggs = zest.releaser[recommended]

[test]
recipe = zc.recipe.testrunner
eggs =
    pas.plugins.azure_ad[test]
defaults = ['-s', 'pas.plugins.azure_ad', '--auto-color', '--auto-progress']

[coverage]
recipe = zc.recipe.egg
eggs = coverage

[test-coverage]
recipe = collective.recipe.template
input = inline:
    #!/bin/bash
    ${buildout:directory}/bin/coverage run --source=${buildout:directory}/src/pas/plugins/azure_ad bin/test
    ${buildout:directory}/bin/coverage html
    ${buildout:directory}/bin/coverage report -m --fail-under=90
    # Fail (exit status 1) if coverage returns exit status 2 (this happens
    # when test coverage is below 100%.
output = ${buildout:directory}/bin/test-coverage
mode = 755

[omelette]
recipe = collective.recipe.omelette
eggs =
    ${instance:eggs}
